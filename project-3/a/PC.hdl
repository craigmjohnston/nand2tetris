// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not16(in[0..15]=true, out=zero16);
    Inc16(in=regout, out=incout);

    // 00: read
    // 01: load
    // 10: increment
    // 11: reset

    /*

    load : 0 1 0 1 0 1 0 1
    inc  : 0 0 1 1 0 0 1 1
    reset: 0 0 0 0 1 1 1 1
    ----------------------------------
    sel0 : 0 1 0 1 1 1 1 1
    sel1 : 0 0 1 0 1 1 1 1

    */

    Or(a=load, b=reset, out=sel0);

    Not(in=load, out=notload);
    And(a=inc, b=notload, out=incnotload);
    Or(a=incnotload, b=reset, out=sel1);

    Mux4Way16(a=regout, b=in, c=incout, d=zero16, sel[0]=sel0, sel[1]=sel1, out=muxout);

    Register(in=muxout, load=true, out=regout, out=out);
}
